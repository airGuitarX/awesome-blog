<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>System Design on 玉米地</title>
        <link>http://localhost:1313/tags/system-design/</link>
        <description>Recent content in System Design on 玉米地</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 06 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/system-design/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>2025 找工总结</title>
        <link>http://localhost:1313/p/2025-job-hunting-summary/</link>
        <pubDate>Mon, 06 Oct 2025 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/p/2025-job-hunting-summary/</guid>
        <description>&lt;h2 id=&#34;找工时间线与整体总结&#34;&gt;找工时间线与整体总结
&lt;/h2&gt;&lt;p&gt;我： 8yoe, general SDE，毕业以来第一次找工……&lt;/p&gt;
&lt;p&gt;去年11月左右全组人都跑光了，关系很好的同事要么离职要么转组，原组直接解散让我萌生了跑路的想法，加上公司准备从2025年开始RTO5，更不想呆了。被动并入姐妹组之后发现oncall十分阴间，于是立刻决定年底开始刷题。&lt;/p&gt;
&lt;p&gt;我的找工目标：title平级/升级 + base pay持平/增加 + RTO天数更少的任何公司，雇员人数&amp;gt;100。&lt;/p&gt;
&lt;p&gt;面试准备应该是找工中整体最花时间的，1-4月，7-8月都在刷题和准备SD+BQ，中间5月回家了一趟参加CP导致整体进度拉长（不应该啊不应该可是那是CP啊！），于是就一直找到了9月。4月收了一些面试，也有一家走完了全部终面流程，但直接被Ghost没有下文了。这家因为和国内有业务所以明确说明有些时候需要晚上开会，本来也不是很想去也就没有继续follow up。&lt;/p&gt;
&lt;p&gt;6月-7月回来继续刷题，从Java换成了Python基本等于从0开始，但是还是强烈建议每一个用C++/Java的人换成Python，Python大法好！语法简单，build-in function多省时又省力。&lt;/p&gt;
&lt;p&gt;8月又修了一版简历开始狂投，收了几个面试最后拿到了一个full remote offer，本着绝不为难自己的想法直接从了。&lt;/p&gt;
&lt;p&gt;转化率如下：
&lt;img src=&#34;flow.png&#34; alt=&#34;converting-flow&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;准备什么怎么准备&#34;&gt;准备什么，怎么准备
&lt;/h2&gt;&lt;p&gt;以下内容全部为网上免费资料，SDE找工是一个被创造出来的需求，我的目标是在不牺牲ROI的情况下，能不花钱做成的事绝对不花钱。当然不是说不能花钱，根据自己的需要衡量就好。&lt;/p&gt;
&lt;h3 id=&#34;简历&#34;&gt;简历
&lt;/h3&gt;&lt;p&gt;首先repact after me：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绝对！不要！用2 column 板式！影响ATS识别。&lt;/li&gt;
&lt;li&gt;10 yoe 以下一律1页解决，除非你有专利。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Reddit找的实用参考： &lt;a class=&#34;link&#34; href=&#34;https://www.reddit.com/r/EngineeringResumes/wiki/index/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.reddit.com/r/EngineeringResumes/wiki/index/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;内容上：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;杜绝没用的副词 = greatly, significently, etc.&lt;/li&gt;
&lt;li&gt;有数据一定要列数据 =  improve cache hit rate by x%, saving 2 hours on deployment, event reached out to 10k people, etc.&lt;/li&gt;
&lt;li&gt;有工作经验学校就写最后&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;刷题---leetcode--neetcode&#34;&gt;刷题 - LeetCode + NeetCode
&lt;/h3&gt;&lt;p&gt;先去看一遍常见DSA，这里推荐Hellow Interview的Code 部分： &lt;a class=&#34;link&#34; href=&#34;https://www.hellointerview.com/learn/code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.hellointerview.com/learn/code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;AlgoMonster也可以看一下，不过这个最好结合做题： &lt;a class=&#34;link&#34; href=&#34;https://algo.monster/dashboard&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://algo.monster/dashboard&lt;/a&gt; AlgoMonster在DSA部分就涉及到付费，不过我没有买，打算看完免费内容不够再说（实际上完全够用）。&lt;/p&gt;
&lt;p&gt;接下来 LeetCode 150 或者 NeetCode 150刷就完事，看到Hard直接跳过，性价比太低。AlgoMonster的flow chart很有用： &lt;a class=&#34;link&#34; href=&#34;https://algo.monster/flowchart&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://algo.monster/flowchart&lt;/a&gt; 类似于一个决策树帮你快速定位某道题应该用什么技巧解决。&lt;/p&gt;
&lt;p&gt;LC不懂的问题可以看 AlgoMonster的解法 &lt;a class=&#34;link&#34; href=&#34;https://algo.monster/liteproblems/100&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://algo.monster/liteproblems/100&lt;/a&gt; ，或者有请ChatGPT老师。碰到做不出来/没有思路的题我会直接看答案，然后在Note里总结下我流思考步骤/解题要点，为二刷三刷节省时间，LC的Note页面很方便可以看所有的note： &lt;a class=&#34;link&#34; href=&#34;https://leetcode.com/notes/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://leetcode.com/notes/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统设计&#34;&gt;系统设计
&lt;/h3&gt;&lt;h4 id=&#34;high-level-design&#34;&gt;High Level Design
&lt;/h4&gt;&lt;p&gt;Hello Interview- System Design in a Hurry: &lt;a class=&#34;link&#34; href=&#34;https://www.hellointerview.com/learn/system-design/in-a-hurry/introduction&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.hellointerview.com/learn/system-design/in-a-hurry/introduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前觉得最有用的网站，建议是把免费部分全看完再决定要不要买付费内容。我没买因为感觉够用了。&lt;/p&gt;
&lt;p&gt;另外推荐两本已经被推荐烂了的书：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bytes.usc.edu/~saty/courses/docs/data/SystemDesignInterview.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;System Design Interview - An Insider&amp;rsquo;s Guide(Alex Xu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Vonng/ddia&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Designing Data-Intensive Applications, 2nd Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;都推荐读英文版。适合从0开始读学习SD且有一定时间的人，没有时间/只为了找工作就看Hello Interview吧。顺序上我会比较推荐DDIA开始，SD Interview讲的内容比较简单忽略了一些Deep Dive，个人觉得用DDIA打基础的话，读SD Interview会更轻松。&lt;/p&gt;
&lt;h4 id=&#34;low-level-design&#34;&gt;Low Level Design
&lt;/h4&gt;&lt;p&gt;没准备太多，实际上也只有一家公司考了，姑且放一份参考资料：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ashishps1/awesome-system-design-resources?tab=readme-ov-file&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;awesome-system-design-resources&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;behavioral-questions&#34;&gt;Behavioral Questions
&lt;/h3&gt;&lt;p&gt;推荐2个网站：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://thebehavioral.substack.com/p/roadmap-to-behavioral-interview-prep&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mastering Behavioral Interviews&lt;/a&gt; 主要针对BQ该准备什么和如何取舍&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.techinterviewhandbook.org/behavioral-interview-questions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tech Interview Handbook&lt;/a&gt; 综合类如何准备面试，但也有专门的BQ section,面试最后不知道问HR/Manager/SDE/Leadership 什么问题可以从这里找&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根据从小地瓜上学来的经验，BQ问题万变不离其宗就是这10条的变体：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;teamwork&lt;/li&gt;
&lt;li&gt;leadership&lt;/li&gt;
&lt;li&gt;motivation&lt;/li&gt;
&lt;li&gt;challenge&lt;/li&gt;
&lt;li&gt;conflict&lt;/li&gt;
&lt;li&gt;learn new skills&lt;/li&gt;
&lt;li&gt;multitasking&lt;/li&gt;
&lt;li&gt;planning&lt;/li&gt;
&lt;li&gt;client service&lt;/li&gt;
&lt;li&gt;failure&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;然后呢&#34;&gt;然后呢？
&lt;/h2&gt;&lt;p&gt;练……虽然我不推荐投入全部个人时间找工（那样很快就会崩溃），但是每天划出一段雷打不动的时间刷题/看书/练习BQ还是很有必要的，一旦度过最初的启动阶段心情会好很多。希望大家都能在这个糟糕的市场中成功打捞一份工作！&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
